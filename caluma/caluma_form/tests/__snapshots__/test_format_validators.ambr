# serializer version: 1
# name: test_base_format_validators[question__format_validators1--True-text]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': '',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_base_format_validators[question__format_validators1--True-textarea]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': '',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_base_format_validators[question__format_validators2-test@example.com-True-text]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_base_format_validators[question__format_validators2-test@example.com-True-textarea]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_base_format_validators[question__format_validators4-+411234567890-True-text]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': '+411234567890',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_base_format_validators[question__format_validators4-+411234567890-True-textarea]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        'stringValue': '+411234567890',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_fetch_format_validators
  dict({
    'allFormatValidators': dict({
      'edges': list([
        dict({
          'node': dict({
            'errorMsg': 'Not valid',
            'name': 'test name english',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'test-validator',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Please enter a valid e-mail address',
            'name': 'E-mail address',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'email',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Please enter a valid phone number',
            'name': 'Phone number',
            'regex': '^[\\s\\/\\.\\(\\)-]*(?:\\+|0|00)(?:[\\s\\/\\.\\(\\)-]*\\d[\\s\\/\\.\\(\\)-]*){6,20}$',
            'slug': 'phone-number',
          }),
        }),
      ]),
      'pageInfo': dict({
        'endCursor': 'YXJyYXljb25uZWN0aW9uOjI=',
        'startCursor': 'YXJyYXljb25uZWN0aW9uOjA=',
      }),
      'totalCount': 3,
    }),
  })
# ---
# name: test_fetch_format_validators.1
  dict({
    'allFormatValidators': dict({
      'edges': list([
        dict({
          'node': dict({
            'errorMsg': 'Nicht valid',
            'name': 'test name deutsch',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'test-validator',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Bitte geben Sie eine gültige E-Mail Adresse ein',
            'name': 'E-Mail Adresse',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'email',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Bitte geben Sie eine gültige Telefonnummer ein',
            'name': 'Telefonnummer',
            'regex': '^[\\s\\/\\.\\(\\)-]*(?:\\+|0|00)(?:[\\s\\/\\.\\(\\)-]*\\d[\\s\\/\\.\\(\\)-]*){6,20}$',
            'slug': 'phone-number',
          }),
        }),
      ]),
      'pageInfo': dict({
        'endCursor': 'YXJyYXljb25uZWN0aW9uOjI=',
        'startCursor': 'YXJyYXljb25uZWN0aW9uOjA=',
      }),
      'totalCount': 3,
    }),
  })
# ---
# name: test_fetch_format_validators.2
  dict({
    'allFormatValidators': dict({
      'edges': list([
        dict({
          'node': dict({
            'errorMsg': 'Not valid',
            'name': 'test name english',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'test-validator',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Veuillez entrer une addresse e-mail valide',
            'name': 'Adresse e-mail',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'email',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Veuillez entrer un numéro de téléphone valide',
            'name': 'Numéro de téléphone',
            'regex': '^[\\s\\/\\.\\(\\)-]*(?:\\+|0|00)(?:[\\s\\/\\.\\(\\)-]*\\d[\\s\\/\\.\\(\\)-]*){6,20}$',
            'slug': 'phone-number',
          }),
        }),
      ]),
      'pageInfo': dict({
        'endCursor': 'YXJyYXljb25uZWN0aW9uOjI=',
        'startCursor': 'YXJyYXljb25uZWN0aW9uOjA=',
      }),
      'totalCount': 3,
    }),
  })
# ---
# name: test_fetch_format_validators.3
  dict({
    'allFormatValidators': dict({
      'edges': list([
        dict({
          'node': dict({
            'errorMsg': 'Not valid',
            'name': 'test name english',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'test-validator',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Please enter a valid e-mail address',
            'name': 'E-mail address',
            'regex': '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
            'slug': 'email',
          }),
        }),
        dict({
          'node': dict({
            'errorMsg': 'Please enter a valid phone number',
            'name': 'Phone number',
            'regex': '^[\\s\\/\\.\\(\\)-]*(?:\\+|0|00)(?:[\\s\\/\\.\\(\\)-]*\\d[\\s\\/\\.\\(\\)-]*){6,20}$',
            'slug': 'phone-number',
          }),
        }),
      ]),
      'pageInfo': dict({
        'endCursor': 'YXJyYXljb25uZWN0aW9uOjI=',
        'startCursor': 'YXJyYXljb25uZWN0aW9uOjA=',
      }),
      'totalCount': 3,
    }),
  })
# ---
